/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication3;

import java.awt.Color;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Joshua
 */
public class atomicnum extends javax.swing.JFrame {
    String [] table = {"Se", "Be", "O", "Ti", "He", "Ga",
                      "K", "Rh", "P", "H",};
    String[][] answer = {
                      {"34", "46"}, {"4", "3"}, {"8", "12"}, {"22", "33"}, 
                      {"2", "7"}, {"31", "52"}, {"19", "20"},{"45", "74"},    
                      {"15", "9"}, {"1", "2"}  
                      };

    int index = 0, correct = 0, hint = 3;
    /**
     * Creates new form of 
     * 
     */
    public atomicnum() {
        initComponents();
        updateScoreLabel();// display the 0/10
        displayNextQuestion();//question display
        setLocationRelativeTo(null);//center
        Restart.setVisible(false);//para dina makita ang restart pagtapos ng pindotin    
         setBackgroundImage("C:\\Users\\Erwin\\Downloads\\multiplechoice bg.jpg");
    }

    private void setBackgroundImage(String imagePath) {
        ImageIcon backgroundImg = new ImageIcon(imagePath);
        JLabel background = new JLabel(backgroundImg);
        background.setBounds(0, 0, getWidth(), getHeight()); // Set size to match JFrame

        // Set layout to null to allow absolute positioning of components
        getContentPane().setLayout(null);

        // Add background label to the content pane
        getContentPane().add(background);

        // Set the transparency of components
       
       BACKMENU.setOpaque(false);
        ANSWER2.setOpaque(false);
        QUESTION.setOpaque(false);
        jLabel1.setOpaque(false);
        jLabel2.setOpaque(false);
         jLabel3.setOpaque(false);
         namequest.setOpaque(false);
               

        BACKMENU.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKMENUMouseEntered(evt);
            }
            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
               BACKMENUMouseExited(evt);
            }
        });
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ANSWER1 = new javax.swing.JButton();
        ANSWER2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        QUESTION = new javax.swing.JPanel();
        BACKMENU = new javax.swing.JButton();
        Restart = new javax.swing.JButton();
        namequest = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ANSWER1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ANSWER1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ANSWER1ActionPerformed(evt);
            }
        });

        ANSWER2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ANSWER2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ANSWER2ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout QUESTIONLayout = new javax.swing.GroupLayout(QUESTION);
        QUESTION.setLayout(QUESTIONLayout);
        QUESTIONLayout.setHorizontalGroup(
            QUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 71, Short.MAX_VALUE)
        );
        QUESTIONLayout.setVerticalGroup(
            QUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        BACKMENU.setText("Go Back");
        BACKMENU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKMENUActionPerformed(evt);
            }
        });

        Restart.setText("Restart");
        Restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestartActionPerformed(evt);
            }
        });

        namequest.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        namequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        namequest.setText("jLabel1");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel4.setText("Guess the Atomic Number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BACKMENU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(41, 41, 41)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(62, 62, 62))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(QUESTION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139)
                        .addComponent(namequest, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(ANSWER1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(ANSWER2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Restart)
                .addGap(258, 258, 258))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BACKMENU))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(QUESTION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(namequest, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ANSWER2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ANSWER1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(Restart)
                        .addGap(61, 61, 61))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ANSWER1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ANSWER1ActionPerformed
        // TODO add your handling code here:
        checkAnswer(ANSWER1.getText());
            
    }//GEN-LAST:event_ANSWER1ActionPerformed

    private void ANSWER2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ANSWER2ActionPerformed
        // TODO add your handling code here:
        checkAnswer(ANSWER2.getText());
    }//GEN-LAST:event_ANSWER2ActionPerformed

    private void RestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestartActionPerformed
        // TODO add your handling code here:
        index = 0;
        correct = 0;
        updateScoreLabel();
        shuffleQuestions();
        displayNextQuestion();
        Restart.setVisible(false);
        ANSWER1.setEnabled(true);
        ANSWER2.setEnabled(true);
    }//GEN-LAST:event_RestartActionPerformed

    private void BACKMENUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKMENUActionPerformed
        // TODO add your handling code here:
         this.dispose(); // close the certain frame
        multipleatomic  multipleatomic = new  multipleatomic();
         multipleatomic.setLocationRelativeTo(null); // Center the frame
        multipleatomic.setVisible(true);
    }//GEN-LAST:event_BACKMENUActionPerformed
    private void checkAnswer(String chosenAnswer){
        if(index == 10){
            Restart.setVisible(true); // Show restart button when index reaches 10
        }
         
        
        String correctAnswer = answer[index - 1][0]; // Get the correct answer for the current question
        
        if (chosenAnswer.equals(correctAnswer)){
        // If the chosen answer matches the correct answer
        correct++; // Increment the correct answer count
        JOptionPane.showMessageDialog(this, "Correct!");    
        }else {
        JOptionPane.showMessageDialog(this, "Incorrect. Correct answer is: "
                                      + correctAnswer);
        }

        updateScoreLabel(); // Update the score label
        displayNextQuestion(); // Move to the next question
        }
    private void displayNextQuestion(){
        // Check if all questions have been asked
        if(index >= table.length){
            JOptionPane.showMessageDialog(this, "Quiz completed! Your score: "+ 
                                            correct + " / " + table.length);
            ANSWER1.setEnabled(false); // Disable answer buttons
            ANSWER2.setEnabled(false);
            return;
            }

        // Display the next question
        namequest.setText(table[index]);

        // Set answers for the current question
        Random random = new Random();
        int correctAnswerIndex = random.nextInt(2); // Randomly select which button will have the correct answer
        int wrongAnswerIndex = (correctAnswerIndex + 1) % 2; // The other button will have the wrong answer

        jLabel2.setText("Score: " + correct + "/" + "10");
        ANSWER1.setText(answer[index][correctAnswerIndex]);
        ANSWER2.setText(answer[index][wrongAnswerIndex]);
        index++;
}   
    private void shuffleQuestions(){
        Random rnd = new Random();
        for(int i = table.length - 1; i > 0; i--){
            int index = rnd.nextInt(i + 1);
            // Swap questions
            String tempQuestion = table[index];
            table[index] = table[i];
            table[i] = tempQuestion;
            // Swap answers
            String[] tempAnswer = answer[index];
            answer[index] = answer[i];
            answer[i] = tempAnswer;
        }
    }
    private void updateScoreLabel(){
        int totalQuestions = 10;
        
        jLabel2.setText("Score: " + correct + "/" + totalQuestions);
        }

     
     private void BACKMENUMouseEntered(java.awt.event.MouseEvent evt) {                                  
        // TODO add your handling code here:
        BACKMENU.setBackground(Color.red);
    }                                 

    private void BACKMENUMouseExited(java.awt.event.MouseEvent evt) {                                 
        // TODO add your handling code here:
        BACKMENU.setBackground(Color.LIGHT_GRAY);
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(atomicnum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(atomicnum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(atomicnum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(atomicnum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new atomicnum().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ANSWER1;
    private javax.swing.JButton ANSWER2;
    private javax.swing.JButton BACKMENU;
    private javax.swing.JPanel QUESTION;
    private javax.swing.JButton Restart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel namequest;
    // End of variables declaration//GEN-END:variables
}
