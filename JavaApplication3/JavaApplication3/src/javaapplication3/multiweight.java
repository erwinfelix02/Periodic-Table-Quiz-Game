/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication3;

/**
 *
 * @author Erwin
 */

import java.awt.Color;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
public class multiweight extends javax.swing.JFrame {
String [] table = {"GOLD", "SILVER", "CARBON", "OXYGEN", "NEON", "SODIUM",
                      "NITROGEN", "ALUMINUM", "IODINE", "MAGNESIUM",};
                       //array ng mga tanong
    String[][] answer = {
                      {" 196.97", "26.9"}, {"107.87", "4.01"}, {"12.01", "6.97"}, {"15.999", "7.87"}, 
                      {"20.18", "2.99"}, {"22.99", "42.99"}, {"14.01", "4.305"},{" 26.98", " 12.01"},    
                      {" 126.9", "14.01"}, {"24.305", "96.97"}  
                      };//array ng mga answer

    int index = 0, correct = 0; 
    /**
     * Creates new form multiweight
     */
    public multiweight() {
        initComponents();
         updateScoreLabel();// display the 0/10
        displayNextQuestion();//question display
        setLocationRelativeTo(null);//center
        Restart.setVisible(false);/*para dina makita ang restart pagtapos 
        pindotin    */
         setBackgroundImage("C:\\Users\\Erwin\\Downloads\\multiplechoice bg.jpg");
    }

    
    private void setBackgroundImage(String imagePath) {
        ImageIcon backgroundImg = new ImageIcon(imagePath);
        JLabel background = new JLabel(backgroundImg);
        background.setBounds(0, 0, getWidth(), getHeight()); // Set size to match JFrame

        // Set layout to null to allow absolute positioning of components
        getContentPane().setLayout(null);

        // Add background label to the content pane
        getContentPane().add(background);

        // Set the transparency of components
       
        
        
       BACKMENU.setOpaque(false);
        ANSWER2.setOpaque(false);
        QUESTION.setOpaque(false);
        jLabel2.setOpaque(false);
         namequest.setOpaque(false);
               

        BACKMENU.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKMENUMouseEntered(evt);
            }
            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
               BACKMENUMouseExited(evt);
            }
        });
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BACKMENU = new javax.swing.JButton();
        namequest = new javax.swing.JLabel();
        QUESTION = new javax.swing.JPanel();
        ANSWER1 = new javax.swing.JButton();
        ANSWER2 = new javax.swing.JButton();
        Restart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BACKMENU.setText("Go Back");
        BACKMENU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKMENUActionPerformed(evt);
            }
        });

        namequest.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        namequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        namequest.setText("jLabel1");

        javax.swing.GroupLayout QUESTIONLayout = new javax.swing.GroupLayout(QUESTION);
        QUESTION.setLayout(QUESTIONLayout);
        QUESTIONLayout.setHorizontalGroup(
            QUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 71, Short.MAX_VALUE)
        );
        QUESTIONLayout.setVerticalGroup(
            QUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        ANSWER1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ANSWER1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ANSWER1ActionPerformed(evt);
            }
        });

        ANSWER2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ANSWER2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ANSWER2ActionPerformed(evt);
            }
        });

        Restart.setText("Restart");
        Restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestartActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel4.setText("Guess the Atomic Weight");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Restart)
                .addGap(251, 251, 251))
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(ANSWER1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(ANSWER2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QUESTION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BACKMENU))
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(namequest, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel4)
                                        .addGap(25, 25, 25))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(BACKMENU)
                                        .addGap(43, 43, 43)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namequest, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(QUESTION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(ANSWER1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ANSWER2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(Restart)
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BACKMENUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKMENUActionPerformed
        // TODO add your handling code here:
        this.dispose(); // close the certain frame
        multipleweight  multipleweight = new  multipleweight();
       multipleweight.setLocationRelativeTo(null); // Center the frame
        multipleweight.setVisible(true);
    }//GEN-LAST:event_BACKMENUActionPerformed

    private void ANSWER1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ANSWER1ActionPerformed
        // TODO add your handling code here:
        checkAnswer(ANSWER1.getText());
    }//GEN-LAST:event_ANSWER1ActionPerformed

    private void ANSWER2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ANSWER2ActionPerformed
        // TODO add your handling code here:
        checkAnswer(ANSWER2.getText());//text will get from getText
    }//GEN-LAST:event_ANSWER2ActionPerformed

    private void RestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestartActionPerformed
        // TODO add your handling code here:
        index = 0;
        correct = 0;
        updateScoreLabel();
        shuffleQuestions();
        displayNextQuestion();
        Restart.setVisible(false);
        ANSWER1.setEnabled(true);//allow the button to available
        ANSWER2.setEnabled(true);
    }//GEN-LAST:event_RestartActionPerformed

    private void displayNextQuestion() {
        // Check if all questions have been asked
        if (index >= table.length){
            JOptionPane.showMessageDialog(this, "Quiz completed! Your score: "+ 
                                            correct + "/" + table.length);
            ANSWER1.setEnabled(false); // Disable answer buttons
            ANSWER2.setEnabled(false); // from both buttons
            return;
            }

        // Display the next question
        namequest.setText(table[index]);

        // Set answers for the current question
        Random random = new Random();
        int correctAnswerIndex = random.nextInt(2); // Randomly select which button will have the correct answer
        int wrongAnswerIndex = (correctAnswerIndex + 1) % 2; // The other button will have the wrong answer

        ANSWER1.setText(answer[index][correctAnswerIndex]);
        ANSWER2.setText(answer[index][wrongAnswerIndex]);

        index++;
    }
    
     private void checkAnswer(String chosenAnswer) {
        if (index == 10) {
            Restart.setVisible(true); /*the Show restart button when index 
            reaches 10 value
            */
        }
        String correctAnswer = answer[index - 1][0]; /* Get the correct answer for 
        the current question*/
        if (chosenAnswer.equals(correctAnswer)) {
        // If the chosen answer matches the correct answer
        correct++; // Increment the correct answer count
        JOptionPane.showMessageDialog(this, "Correct!");    
        }else {
        JOptionPane.showMessageDialog(this, "Incorrect. Correct answer is: "
                                      + correctAnswer);/*if the user is wrong
                                            it will display the correct answer*/
        }

        updateScoreLabel(); // Update the score label
        displayNextQuestion(); // Move to the next question
    }
        
     private void BACKMENUMouseEntered(java.awt.event.MouseEvent evt) {                                  
        // TODO add your handling code here:
        BACKMENU.setBackground(Color.red);
    }                                 

    private void BACKMENUMouseExited(java.awt.event.MouseEvent evt) {                                 
        // TODO add your handling code here:
        BACKMENU.setBackground(Color.LIGHT_GRAY);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(multiweight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(multiweight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(multiweight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(multiweight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new multiweight().setVisible(true);
            }
        });
    }
  private void shuffleQuestions() {
        Random rnd = new Random();
        for (int t = 10 - 1; t > 0; t--) {
            int random_question = rnd.nextInt(t + 1);
            // Swap questions
            String tempQuestion = table[random_question];
            table[random_question] = table[t];
            table[t] = tempQuestion;
            // Swap answers
            String[] tempAnswer = answer[random_question];
            answer[random_question] = answer[t];
            answer[t] = tempAnswer;
        }
    
    }
    
    private void updateScoreLabel() {
        int totalQuestions = 10;
        
            jLabel2.setText("Score: " + correct + "/" + totalQuestions);
            }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ANSWER1;
    private javax.swing.JButton ANSWER2;
    private javax.swing.JButton BACKMENU;
    private javax.swing.JPanel QUESTION;
    private javax.swing.JButton Restart;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel namequest;
    // End of variables declaration//GEN-END:variables
}
